<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <PreserveCompilationContext>true</PreserveCompilationContext>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="*.json;seed.sql" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\testapp\BasicApi\BasicApi.csproj" />
    <ProjectReference Include="..\..\testapp\BasicViews\BasicViews.csproj" />
    <ProjectReference Include="..\..\testapp\BigModelBinding\BigModelBinding.csproj" />
    <ProjectReference Include="..\..\testapp\BigViews\BigViews.csproj" />
    <ProjectReference Include="..\..\testapp\LargeStaticFile\LargeStaticFile.csproj" />
    <ProjectReference Include="..\..\testapp\LargeStaticView\LargeStaticView.csproj" />
    <ProjectReference Include="..\..\testapp\LocalizedViews\LocalizedViews.csproj" />
    <ProjectReference Include="..\..\testapp\MusicStoreViews\MusicStoreViews.csproj" />
    <ProjectReference Include="..\..\testapp\StarterMvc\StarterMvc.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.TestHost" Version="$(MicrosoftAspNetCoreTestHostPackageVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.Testing" Version="$(MicrosoftAspNetCoreTestingPackageVersion)" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="$(MicrosoftExtensionsDependencyInjectionAbstractionsPackageVersion)" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="$(MicrosoftNETTestSdkPackageVersion)" />
    <PackageReference Include="xunit" Version="$(XunitPackageVersion)" />
    <PackageReference Include="xunit.runner.visualstudio" Version="$(XunitRunnerVisualstudioPackageVersion)" />
  </ItemGroup>

  <!--
    Tests in this project exercise view compilation and other MVC ApplicationParts features. In turn, ApplicationParts
    use DependencyContext.Load() and that looks next to a .dll for its .deps.json. Thus, our test applications need
    their .deps.json file in this project's bin directory.
  -->
  <Target Name="CopyDepsFiles" AfterTargets="Build">
    <ItemGroup>
      <DepsFilePaths Include="$([System.IO.Path]::ChangeExtension('%(_ResolvedProjectReferencePaths.FullPath)', '.deps.json'))" />
    </ItemGroup>

    <Copy SourceFiles="%(DepsFilePaths.FullPath)" DestinationFolder="$(OutputPath)" Condition="Exists('%(DepsFilePaths.FullPath)')" />
  </Target>
</Project>
