
var VERSION='0.1'
var FULL_VERSION='0.1'
var AUTHORS='Microsoft Open Technologies, Inc.'

use-standard-lifecycle
k-standard-goals

#stress-test .compile
  @{
    var projectFiles = Files.Include("stress-test/**/project.json").Exclude("**/bin/*/app/project.json").ToList();

    projectFiles.ForEach(projectFile => 
    {
      var projectText = File.ReadAllText(projectFile);
      var project = (JsonObject)Json.Deserialize(projectText);
  
      if (project.Keys.Contains("testRunner"))
      {    
          var projectFolder = Path.GetDirectoryName(projectFile);
          var projectName = Path.GetFileName(projectFolder);
  
          var testArgs = " -parallel none";

          var configs = project.ValueAsJsonObject("frameworks");
          IEnumerable<string> targetFrameworks = configs == null? 
              new string[0]: 
              configs.Keys.Where(k => k.StartsWith("dnx", StringComparison.OrdinalIgnoreCase));
          
          var runnerFolder = Path.GetFullPath(Path.Combine(KoreBuildFolderPath, "build", "xunit.runner.console", "tools"));
          var xunitCoreFolder = Path.GetFullPath(Path.Combine(KoreBuildFolderPath, "build", "xunit.core", "build", "_desktop"));

          foreach (var framework in targetFrameworks)
          {
              if (framework.StartsWith("dnx451", StringComparison.OrdinalIgnoreCase))
              {
                    var publishFolder = Path.Combine(projectFolder, ".testPublish", framework);
                    DotnetPublish(projectFile, publishFolder, framework);
                    Copy(runnerFolder, publishFolder, "*.*", true);
                    
                    // Copy xunit.execution.desktop. This is required in order to load the binding
                    // redirects for dlls. See this thread for more details:
                    // https://github.com/xunit/xunit/issues/732
                    Copy(xunitCoreFolder, publishFolder, "*.*", true);

                    var targetTestDll = projectName + ".dll";

                    var runnerExe = Path.GetFullPath(Path.Combine(publishFolder, "xunit.console.exe"));
                    ExecClr(runnerExe, targetTestDll + " " + testArgs, publishFolder);
              }
          }
      }
    });
  }