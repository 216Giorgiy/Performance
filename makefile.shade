
var VERSION='0.1'
var FULL_VERSION='0.1'
var AUTHORS='Microsoft Open Technologies, Inc.'

use-standard-lifecycle
k-standard-goals

#stress-test .compile
  @{
    var projectFiles = Files.Include("stress-test/**/project.json").Exclude("**/bin/*/app/project.json").ToList();

    projectFiles.ForEach(projectFile => 
    {
      var projectFolder = Path.GetDirectoryName(projectFile);
      var projectName = Path.GetFileName(projectFolder);

      var framework = "dnx451";
      var configuration = "Debug";
      var testArgs = " -parallel none";
      var runnerFolder = Path.GetFullPath(Path.Combine(KoreBuildFolderPath, "build", "xunit.runner.console", "tools"));
      var xunitCoreFolder = Path.GetFullPath(Path.Combine(KoreBuildFolderPath, "build", "xunit.core", "build", "_desktop"));

      if (IsLinux)
      {
        // Work around issue with testing in parallel on Mono
        // and issue https://github.com/xunit/xunit/issues/158
        testArgs = " -parallel none -noappdomain";
      }

      var publishFolder = Path.Combine(projectFolder, "obj", "testPublish-" + framework);
      DotnetPublish(projectFile, publishFolder, framework, configuration);

      var runnerExe = "xunit.console.exe";
      Copy(runnerFolder, publishFolder, "*.*", true);
      Copy(xunitCoreFolder, publishFolder, "*.*", true);
      var runnerFullPath = Path.GetFullPath(Path.Combine(publishFolder, runnerExe));

      var targetTestDll = projectName + ".dll";

      ExecClr(runnerFullPath, targetTestDll + " " + testArgs, publishFolder);
    });
  }